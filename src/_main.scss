@use 'sass:math';
@import "elr-scss-functions/src/main";
@import "elr-scss-config/src/main";

@mixin menu-animated($config: ()) {
  $config: extend(
    (
      font-size: $base-fontsize,
      color: $primary-color,
    ),
    $config
  );

  $font-size: map-get($config, font-size);
  $color: map-get($config, color);

  * {
    margin: 0;
    padding: 0;
    border: 0;
    box-shadow: none;
    vertical-align: baseline;
    background: transparent;
    box-sizing: border-box;
    font-family: inherit;
    line-height: inherit;
    color: inherit;
    -moz-osx-font-smoothing: grayscale;
    -webkit-font-smoothing: antialiased;
    font-smoothing: antialiased;
    text-rendering: optimizeLegibility;

    ::before,
    ::after {
      box-sizing: border-box;
    }
  }

  .menu {
    position: relative;
    display: flex;
    flex-wrap: wrap;
    margin: 0;
    padding: 0;
    list-style: none;

    @media (max-width: $mobile-width) {
      flex-direction: column;
    }

    .menu-item {
      display: block;
      margin: 0;
      margin-left: 0;
      padding: 0;

      .menu-item-button {
        margin: 0;
        font-size: $font-size;
        font-weight: 700;
        display: block;
        padding: 10px math.div($font-size, 2);
        cursor: pointer;
        user-select: none;
        text-decoration: none;
        color: $color;
        height: auto;
        background: transparent;

        &:hover {
          background: transparent;
        }

        &:focus {
          outline: 0;
        }
      }
    }
  }
}

@mixin menu-double-lines($config: ()) {
  $config: extend(
    (
      font-size: $base-fontsize,
      color: $gray,
      link-color: $primary-color,
      line-thickness: 1px,
    ),
    $config
  );

  $font-size: map-get($config, font-size);
  $color: map-get($config, color);
  $link-color: map-get($config, link-color);
  $line-thickness: map-get($config, line-thickness);

  margin-bottom: 0;

  .menu .menu-item .menu-item-button {
    position: relative;
    display: block;
    margin: 0 1em;
    text-align: center;
    color: $color;
    transition: color 0.4s;
    padding-left: math.div($font-size, 2);
    padding-right: math.div($font-size, 2);

    &:hover,
    &:focus {
      color: $link-color;
    }

    &::before,
    &::after {
      content: "";
      position: absolute;
      left: 0;
      width: 100%;
      height: $line-thickness;
      background: $link-color;
      transform: scale3d(0, 1, 1);
      transition: transform 0.2s;
    }

    &::before {
      top: 0;
      transform-origin: 0 50%;
    }

    &::after {
      bottom: 0;
      transform-origin: 100% 50%;
    }
  }

  .menu-item.current .menu-item-button {
    color: $link-color;

    &::before,
    &::after {
      transform: scale3d(1, 1, 1);
      transition-timing-function: cubic-bezier(0.22, 0.61, 0.36, 1);
      transition-duration: 0.4s;
    }
  }
}

@mixin menu-drop-lines($config: ()) {
  $config: extend(
    (
      color: #999,
      link-color: $primary-color,
      line-thickness: 1px,
    ),
    $config
  );

  $color: map-get($config, color);
  $link-color: map-get($config, link-color);
  $line-thickness: map-get($config, line-thickness);

  .menu .menu-item .menu-item-button {
    margin: 0 1.5em;
    padding: 0.75em 0;
    text-align: center;
    position: relative;
    color: $color;
    transition: color 0.3s;

    &:hover {
      color: $link-color;
    }

    &::after {
      position: absolute;
      top: 100%;
      left: 20%;
      width: 60%;
      height: $line-thickness;
      background: $link-color;
      content: "";
      opacity: 0;
      transition: height 0.3s, opacity 0.3s, transform 0.3s;
      transform: translateY(-10px);
    }

    &:hover::after,
    &:focus::after {
      height: $line-thickness;
      opacity: 1;
      transform: translateY(0);
    }
  }

  .menu .menu-item.current .menu-item-button {
    color: $link-color;

    &::after {
      height: $line-thickness;
      opacity: 1;
      transform: translateY(0);
    }
  }
}

@mixin menu-expanding-lines($config: ()) {
  $config: extend(
    (
      color: #999,
      link-color: $primary-color,
      line-thickness: 1px,
    ),
    $config
  );

  $color: map-get($config, color);
  $link-color: map-get($config, link-color);
  $line-thickness: map-get($config, line-thickness);

  .menu .menu-item .menu-item-button {
    position: relative;
    display: block;
    margin: 0 1.5em;
    padding: 0.75em 0;
    text-align: center;
    color: $color;
    transition: color 0.3s;

    &::before {
      content: "";
      position: absolute;
      bottom: 0;
      left: 0;
      width: 100%;
      height: $line-thickness;
      background: $link-color;
      transform: scale3d(0, 1, 1);
      transition: transform 0.1s;
    }

    &:hover,
    &:focus {
      color: $link-color;

      &::before {
        transform: scale3d(1, 1, 1);
        transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
        transition-duration: 0.3s;
      }
    }
  }

  .menu .menu-item.current .menu-item-button {
    color: $link-color;

    &::before {
      transform: scale3d(1, 1, 1);
      transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
      transition-duration: 0.3s;
    }
  }
}

@mixin menu-simple-lines($config: ()) {
  $config: extend(
    (
      color: #999,
      line-color: $primary-color,
      line-thickness: 1px,
      width: 100px,
    ),
    $config
  );

  $color: map-get($config, color);
  $width: map-get($config, width);
  $line-color: map-get($config, line-color);
  $line-thickness: map-get($config, line-thickness);

  .menu {
    .menu-item {
      margin: 0;

      .menu-item-button {
        color: $color;
        width: $width;
        height: auto;
        text-align: center;
        transition: color 0.3s;

        &:hover,
        &:focus {
          color: $line-color;
        }
      }

      &.current .menu-item-button {
        color: $line-color;
        transition: color 0.5s;
      }
    }
  }

  .menu-line {
    position: absolute;
    top: 100%;
    // left: -37px;
    width: $width;
    height: $line-thickness;
    pointer-events: none;
    border: $line-thickness solid #fff;
    border-width: 0 math.div($width, 3);
    background-color: $line-color;
    transition: transform 0.5s;
    padding: 0;
    transition-timing-function: cubic-bezier(1, 0.01, 0, 1.22);
  }

  .menu-item:nth-child(1).current ~ .menu-line {
    transform: translate3d(0, 0, 0);
  }

  .menu-item:nth-child(2).current ~ .menu-line {
    transform: translate3d(100%, 0, 0);
  }

  .menu-item:nth-child(3).current ~ .menu-line {
    transform: translate3d(200%, 0, 0);
  }

  .menu-item:nth-child(4).current ~ .menu-line {
    transform: translate3d(300%, 0, 0);
  }

  .menu-item:nth-child(5).current ~ .menu-line {
    transform: translate3d(400%, 0, 0);
  }

  @media (max-width: $mobile-width) {
    .menu-line {
      top: 3em;
    }

    .menu-item:nth-child(1).current ~ .menu-line {
      transform: translate3d(0, 0, 0);
    }

    .menu-item:nth-child(2).current ~ .menu-line {
      transform: translate3d(0, 3em, 0);
    }

    .menu-item:nth-child(3).current ~ .menu-line {
      transform: translate3d(0, 6em, 0);
    }

    .menu-item:nth-child(4).current ~ .menu-line {
      transform: translate3d(0, 9em, 0);
    }

    .menu-item:nth-child(5).current ~ .menu-line {
      transform: translate3d(0, 12em, 0);
    }
  }
}
